/**
 * Art Search API
 * Art Search let's you search and discover over one million pieces of historic art.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mail@artsearch.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchArtworks_200_response.h
 *
 * 
 */

#ifndef OAISearchArtworks_200_response_H
#define OAISearchArtworks_200_response_H

#include <QJsonObject>

#include "OAISearchArtworks_200_response_artworks_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISearchArtworks_200_response_artworks_inner;

class OAISearchArtworks_200_response : public OAIObject {
public:
    OAISearchArtworks_200_response();
    OAISearchArtworks_200_response(QString json);
    ~OAISearchArtworks_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAvailable() const;
    void setAvailable(const qint32 &available);
    bool is_available_Set() const;
    bool is_available_Valid() const;

    qint32 getNumber() const;
    void setNumber(const qint32 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    qint32 getOffset() const;
    void setOffset(const qint32 &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    QList<OAISearchArtworks_200_response_artworks_inner> getArtworks() const;
    void setArtworks(const QList<OAISearchArtworks_200_response_artworks_inner> &artworks);
    bool is_artworks_Set() const;
    bool is_artworks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_available;
    bool m_available_isSet;
    bool m_available_isValid;

    qint32 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    qint32 m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    QList<OAISearchArtworks_200_response_artworks_inner> m_artworks;
    bool m_artworks_isSet;
    bool m_artworks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchArtworks_200_response)

#endif // OAISearchArtworks_200_response_H
