/*
 * Art Search API
 *
 * Art Search let's you search and discover over one million pieces of historic art.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mail@artsearch.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = artsearch.Client.OpenAPIDateConverter;

namespace artsearch.Model
{
    /// <summary>
    /// SearchArtworks200Response
    /// </summary>
    [DataContract(Name = "searchArtworks_200_response")]
    public partial class SearchArtworks200Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SearchArtworks200Response" /> class.
        /// </summary>
        /// <param name="available">available.</param>
        /// <param name="number">number.</param>
        /// <param name="offset">offset.</param>
        /// <param name="artworks">artworks.</param>
        public SearchArtworks200Response(int available = default(int), int number = default(int), int offset = default(int), List<SearchArtworks200ResponseArtworksInner> artworks = default(List<SearchArtworks200ResponseArtworksInner>))
        {
            this.Available = available;
            this.Number = number;
            this.Offset = offset;
            this.Artworks = artworks;
        }

        /// <summary>
        /// Gets or Sets Available
        /// </summary>
        [DataMember(Name = "available", EmitDefaultValue = false)]
        public int Available { get; set; }

        /// <summary>
        /// Gets or Sets Number
        /// </summary>
        [DataMember(Name = "number", EmitDefaultValue = false)]
        public int Number { get; set; }

        /// <summary>
        /// Gets or Sets Offset
        /// </summary>
        [DataMember(Name = "offset", EmitDefaultValue = false)]
        public int Offset { get; set; }

        /// <summary>
        /// Gets or Sets Artworks
        /// </summary>
        [DataMember(Name = "artworks", EmitDefaultValue = false)]
        public List<SearchArtworks200ResponseArtworksInner> Artworks { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SearchArtworks200Response {\n");
            sb.Append("  Available: ").Append(Available).Append("\n");
            sb.Append("  Number: ").Append(Number).Append("\n");
            sb.Append("  Offset: ").Append(Offset).Append("\n");
            sb.Append("  Artworks: ").Append(Artworks).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
