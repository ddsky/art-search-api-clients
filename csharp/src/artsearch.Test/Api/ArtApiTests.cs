/*
 * Art Search API
 *
 * Art Search let's you search and discover over one million pieces of historic art.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mail@artsearch.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using artsearch.Client;
using artsearch.Api;
// uncomment below to import models
//using artsearch.Model;

namespace artsearch.Test.Api
{
    /// <summary>
    ///  Class for testing ArtApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ArtApiTests : IDisposable
    {
        private ArtApi instance;

        public ArtApiTests()
        {
            instance = new ArtApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ArtApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ArtApi
            //Assert.IsType<ArtApi>(instance);
        }

        /// <summary>
        /// Test RandomArtwork
        /// </summary>
        [Fact]
        public void RandomArtworkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RandomArtwork();
            //Assert.IsType<RetrieveArtworkById200Response>(response);
        }

        /// <summary>
        /// Test RetrieveArtworkById
        /// </summary>
        [Fact]
        public void RetrieveArtworkByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.RetrieveArtworkById(id);
            //Assert.IsType<RetrieveArtworkById200Response>(response);
        }

        /// <summary>
        /// Test SearchArtworks
        /// </summary>
        [Fact]
        public void SearchArtworksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? query = null;
            //int? earliestStartDate = null;
            //int? latestStartDate = null;
            //int? earliestEndDate = null;
            //int? latestEndDate = null;
            //double? minRatio = null;
            //double? maxRatio = null;
            //string? type = null;
            //string? material = null;
            //string? technique = null;
            //string? origin = null;
            //int? offset = null;
            //int? number = null;
            //var response = instance.SearchArtworks(query, earliestStartDate, latestStartDate, earliestEndDate, latestEndDate, minRatio, maxRatio, type, material, technique, origin, offset, number);
            //Assert.IsType<SearchArtworks200Response>(response);
        }
    }
}
