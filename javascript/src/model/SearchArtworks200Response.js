/**
 * Art Search API
 * Art Search let's you search and discover over one million pieces of historic art.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mail@artsearch.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SearchArtworks200ResponseArtworksInner from './SearchArtworks200ResponseArtworksInner';

/**
 * The SearchArtworks200Response model module.
 * @module model/SearchArtworks200Response
 * @version 1.0.0
 */
class SearchArtworks200Response {
    /**
     * Constructs a new <code>SearchArtworks200Response</code>.
     * @alias module:model/SearchArtworks200Response
     */
    constructor() { 
        
        SearchArtworks200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchArtworks200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchArtworks200Response} obj Optional instance to populate.
     * @return {module:model/SearchArtworks200Response} The populated <code>SearchArtworks200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchArtworks200Response();

            if (data.hasOwnProperty('available')) {
                obj['available'] = ApiClient.convertToType(data['available'], 'Number');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('artworks')) {
                obj['artworks'] = ApiClient.convertToType(data['artworks'], [SearchArtworks200ResponseArtworksInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchArtworks200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchArtworks200Response</code>.
     */
    static validateJSON(data) {
        if (data['artworks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['artworks'])) {
                throw new Error("Expected the field `artworks` to be an array in the JSON data but got " + data['artworks']);
            }
            // validate the optional field `artworks` (array)
            for (const item of data['artworks']) {
                SearchArtworks200ResponseArtworksInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} available
 */
SearchArtworks200Response.prototype['available'] = undefined;

/**
 * @member {Number} number
 */
SearchArtworks200Response.prototype['number'] = undefined;

/**
 * @member {Number} offset
 */
SearchArtworks200Response.prototype['offset'] = undefined;

/**
 * @member {Array.<module:model/SearchArtworks200ResponseArtworksInner>} artworks
 */
SearchArtworks200Response.prototype['artworks'] = undefined;






export default SearchArtworks200Response;

