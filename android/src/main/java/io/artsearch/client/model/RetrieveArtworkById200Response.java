/**
 * Art Search API
 * Art Search let's you search and discover over one million pieces of historic art.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mail@artsearch.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.artsearch.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class RetrieveArtworkById200Response {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("title")
  private String title = null;
  @SerializedName("image")
  private String image = null;
  @SerializedName("start_date")
  private Integer startDate = null;
  @SerializedName("end_date")
  private Integer endDate = null;
  @SerializedName("description")
  private String description = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getImage() {
    return image;
  }
  public void setImage(String image) {
    this.image = image;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getStartDate() {
    return startDate;
  }
  public void setStartDate(Integer startDate) {
    this.startDate = startDate;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getEndDate() {
    return endDate;
  }
  public void setEndDate(Integer endDate) {
    this.endDate = endDate;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveArtworkById200Response retrieveArtworkById200Response = (RetrieveArtworkById200Response) o;
    return (this.id == null ? retrieveArtworkById200Response.id == null : this.id.equals(retrieveArtworkById200Response.id)) &&
        (this.title == null ? retrieveArtworkById200Response.title == null : this.title.equals(retrieveArtworkById200Response.title)) &&
        (this.image == null ? retrieveArtworkById200Response.image == null : this.image.equals(retrieveArtworkById200Response.image)) &&
        (this.startDate == null ? retrieveArtworkById200Response.startDate == null : this.startDate.equals(retrieveArtworkById200Response.startDate)) &&
        (this.endDate == null ? retrieveArtworkById200Response.endDate == null : this.endDate.equals(retrieveArtworkById200Response.endDate)) &&
        (this.description == null ? retrieveArtworkById200Response.description == null : this.description.equals(retrieveArtworkById200Response.description));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.title == null ? 0: this.title.hashCode());
    result = 31 * result + (this.image == null ? 0: this.image.hashCode());
    result = 31 * result + (this.startDate == null ? 0: this.startDate.hashCode());
    result = 31 * result + (this.endDate == null ? 0: this.endDate.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveArtworkById200Response {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  title: ").append(title).append("\n");
    sb.append("  image: ").append(image).append("\n");
    sb.append("  startDate: ").append(startDate).append("\n");
    sb.append("  endDate: ").append(endDate).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
