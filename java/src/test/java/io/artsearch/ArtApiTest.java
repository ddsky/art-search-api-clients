/*
 * Art Search API
 * Art Search let's you search and discover over one million pieces of historic art.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mail@artsearch.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.artsearch;

import io.artsearch.client.ApiException;
import io.artsearch.client.model.RetrieveArtworkById200Response;
import io.artsearch.client.model.SearchArtworks200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ArtApi
 */
@Disabled
public class ArtApiTest {

    private final ArtApi api = new ArtApi();

    /**
     * Random Artwork
     *
     * Get one random artwork from our vast collection. The API returns comprehensive details including the title, high-quality image URL, creation date range, and a rich description providing historical and artistic context.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void randomArtworkTest() throws ApiException {
        RetrieveArtworkById200Response response = api.randomArtwork();
        // TODO: test validations
    }

    /**
     * Retrieve Artwork by Id
     *
     * Get one artwork by its id. The API returns the title, image URL, start and end date, and a description of the artwork.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveArtworkByIdTest() throws ApiException {
        Integer id = null;
        RetrieveArtworkById200Response response = api.retrieveArtworkById(id);
        // TODO: test validations
    }

    /**
     * Search Artworks
     *
     * Search and filter artworks by query, creation time, material, technique, and origin. The natural language search uses semantic AI to understand the context of your query, so you can search for artworks by their style, subject, or even emotions they evoke. The API returns a list of artworks matching the given criteria.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchArtworksTest() throws ApiException {
        String query = null;
        Integer earliestStartDate = null;
        Integer latestStartDate = null;
        Integer earliestEndDate = null;
        Integer latestEndDate = null;
        Double minRatio = null;
        Double maxRatio = null;
        String type = null;
        String material = null;
        String technique = null;
        String origin = null;
        Integer offset = null;
        Integer number = null;
        SearchArtworks200Response response = api.searchArtworks(query, earliestStartDate, latestStartDate, earliestEndDate, latestEndDate, minRatio, maxRatio, type, material, technique, origin, offset, number);
        // TODO: test validations
    }

}
